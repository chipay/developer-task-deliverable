<?xml version="1.0" ?>
<container xmlns="http://symfony.com/schema/dic/services"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">

    <parameters>
        <parameter key="date_time_utils.class">GSibay\DeveloperTask\DateTime\DateTimeUtils</parameter>
        <parameter key="default_date_time_generator_service.class">GSibay\DeveloperTask\Service\DefaultDateTimeGeneratorService</parameter>
        <parameter key="transformer_serializer.class">GSibay\DeveloperTask\Serializer\TransformerSerializer</parameter>
        <parameter key="serializer.class">JMS\Serializer\Serializer</parameter>
        <parameter key="serializer_builder.class">JMS\Serializer\SerializerBuilder</parameter>
        <parameter key="date_times_to_serializable_date_time_container.class">GSibay\DeveloperTask\Transformer\DateTimesToSerializableDateTimeContainer</parameter>
        <parameter key="date_time_to_serializable_date_time.class">GSibay\DeveloperTask\Transformer\DateTimeToSerializableDateTime</parameter>
        <parameter key="is_year_composite_number.class">GSibay\DeveloperTask\Predicate\IsYearCompositeNumber</parameter>
        <parameter key="natural_order_comparator.class">GSibay\DeveloperTask\Comparator\NaturalOrderComparator</parameter>
        <parameter key="filter_and_sort_array_organizer_service.class">GSibay\DeveloperTask\Service\FilterAndSortArrayOrganizerService</parameter>
        <parameter key="generate_dates_command.class">GSibay\DeveloperTask\Command\GenerateDatesCommand</parameter>
        <parameter key="sort_dates_descending_excluding_prime_years_command.class">GSibay\DeveloperTask\Command\SortDatesDescendingExcludingPrimeYearsCommand</parameter>
        <parameter key="chain_transformer.class">GSibay\DeveloperTask\Transformer\ChainTransformer</parameter>
        <parameter key="date_time_to_different_time_and_timezone.class">GSibay\DeveloperTask\Transformer\DateTimeToDifferentTimeAndTimeZone</parameter>
        <parameter key="serializable_date_time_container_to_date_time_.class">GSibay\DeveloperTask\Transformer\SerializableDateTimeContainerToDateTimes</parameter>
        <parameter key="array_transformer.class">GSibay\DeveloperTask\Transformer\ArrayTransformer</parameter>
        <parameter key="xml_xchema_validator.class">GSibay\DeveloperTask\Validator\XMLSchemaValidator</parameter>
    </parameters>

    <services>

        <service id="default_date_time_generator_service" class="GSibay\DeveloperTask\Service\DefaultDateTimeGeneratorService">
        	<argument type="service" id="date_time_utils" />
        </service>

        <service id="filter_composite_number_years_sort_dates_in_descendent_order_service" class="%filter_and_sort_array_organizer_service.class%">
        	<argument type="service" id="is_year_composite_number" />
        	<argument type="service" id="reverse_natural_order_comparator" />
        </service>

    	<!-- Commands -->
	        <service id="generate_dates_command" class="%generate_dates_command.class%" >
	        	<tag name="console.command" />
	        	<argument type="service" id="default_date_time_generator_service" />
	        	<argument type="service" id="default_serializable_date_time_container_transformer_serializer" />
	        </service>
	        <service id="sort_dates_descending_excluding_prime_years_command" class="%sort_dates_descending_excluding_prime_years_command.class%" >
	        	<tag name="console.command" />
	        	<argument type="service" id="filter_composite_number_years_sort_dates_in_descendent_order_service" />
	        	<argument type="service" id="serializable_date_time_1PM_PST_container_transformer_serializer" />
	        	<argument type="service" id="xml_schema_validator"/>
	        </service>

		<!-- Helpers  -->
			<service id="date_time_utils" class="%date_time_utils.class%"/>

        <!-- Serializers -->
	        <service id="serializer_builder" class="%serializer_builder.class%" factory-class="%serializer_builder.class%" factory-method="create" />
	        <service id="serializer" class="%serializer.class%" factory-service="serializer_builder" factory-method="build" />

			<!-- Transformer Serializers -->
				<!-- serializes a DateTime[] by first converting into SerializableDateTimeContainer -->
		        <service id="default_serializable_date_time_container_transformer_serializer" class="%transformer_serializer.class%">
		            <argument type="service" id="serializer" />
		            <argument type="service" id="date_times_to_serializable_date_time_container" />
		        </service>

				<!-- serializes a DateTime[] by first converting into SerializableDateTimeContainer at 1PM PST -->
				<!-- deserializes a SerializableDateTimeContainer and then transforms it to DateTime[] -->
		        <service id="serializable_date_time_1PM_PST_container_transformer_serializer" class="%transformer_serializer.class%">
		            <argument type="service" id="serializer" />
		            <argument type="service" id="date_times_to_serializable_date_time_1PM_PST_container" />
		            <argument type="service" id="serializable_date_time_container_to_date_times" />
		            <argument type="string">GSibay\DeveloperTask\Serializer\Serializable\SerializableDateTimeContainer</argument>
		        </service>

        <!-- Transformers -->

        	<!-- TimeDate[] ====> SerializableDateTime[] -->
        	<service id="date_times_to_serializable_date_times" class="%array_transformer.class%" >
	        	<argument type="service" id="date_time_to_serializable_date_time"/>
	        </service>
	        <!-- TimeDate ====> SerializableDateTime -->
	        <service id="date_time_to_serializable_date_time" class="%date_time_to_serializable_date_time.class%" />


	        <!-- TimeDate[] ====> SerializableDateTimeContainer -->
	        <service id="date_times_to_serializable_date_time_container" class="%date_times_to_serializable_date_time_container.class%">
	        	<argument type="service" id="date_times_to_serializable_date_times" />
	        </service>

			<!-- SerializableDateTimeContainer ==> TimeDate[] -->
	        <service id="serializable_date_time_container_to_date_times" class="%serializable_date_time_container_to_date_time_.class%">
	        </service>

			<!-- DateTime[] ====> DateTime[] 1PM PST -->
			<service id="date_times_to_1PM_PST_date_times" class="%array_transformer.class%">
	        	<argument type="service" id="date_time_to_1PM_PST_date_time"/>
	        </service>
	        <!-- DateTime ====> DateTime 1PM PST -->
			<service id="date_time_to_1PM_PST_date_time" class="%date_time_to_different_time_and_timezone.class%">
	        	<argument>PST</argument>
	        	<argument>13</argument>
	        	<argument>0</argument>
	        	<argument>0</argument>
	        </service>

			<!-- chain transformer: DateTime[] ====> DateTime[] (1pm PST) ====> SerializableDateTimeContainer (1pm PST) -->
			<service id="date_times_to_serializable_date_time_1PM_PST_container" class="%chain_transformer.class%">
	        	<argument type="collection">
	        		<argument id="date_times_to_1PM_PST_date_times" type="service" />
	        		<argument id="date_times_to_serializable_date_time_container" type="service" />
	        	</argument>
	        </service>

        <!-- Predicates -->
	        <service id="is_year_composite_number" class="%is_year_composite_number.class%" />

        <!-- Comparators -->
	        <service id="reverse_natural_order_comparator" class="%natural_order_comparator.class%" >
	        	<argument>false</argument>
	        </service>

	    <!-- Validators -->
	    	<service id="xml_schema_validator" class="%xml_xchema_validator.class%" >
	        	<argument>timestamps.xsd</argument>
	        </service>
    </services>
</container>
